import pyarrow as pa

pa_schema = pa.schema([
    ('dataset_id', pa.string()),
    ('cell_id', pa.int64()),
    ('perturbation_name', pa.string()),
    ('perturbed_target_coord', pa.string()),
    ('perturbed_target_number', pa.int64()),
    ('perturbed_target_ensg', pa.string()),
    ('perturbed_target_symbol', pa.string()),
    ('perturbed_target_biotype', pa.string()),
    ('guide_sequence', pa.string()),
    ('perturbation_type_label', pa.string()),
    ('perturbation_type_id', pa.string()),
    ('timepoint', pa.string()),
    ('treatment_label', pa.string()),
    ('treatment_id', pa.string()),
    ('model_system_label', pa.string()),
    ('model_system_id', pa.string()),
    ('species', pa.string()),
    ('tissue_label', pa.string()),
    ('tissue_id', pa.string()),
    ('cell_type_label', pa.string()),
    ('cell_type_id', pa.string()),
    ('cell_line_label', pa.string()),
    ('cell_line_id', pa.string()),
    ('sex_label', pa.string()),
    ('sex_id', pa.string()),
    ('developmental_stage_label', pa.string()),
    ('developmental_stage_id', pa.string()),
    ('disease_label', pa.string()),
    ('disease_id', pa.string()),
    ('title', pa.string()),
    ('study_uri', pa.string()),
    ('year', pa.int64()),
    ('first_author', pa.string()),
    ('last_author', pa.string()),
    ('summary', pa.string()),
    ('replicates', pa.string()),
    ('number_of_samples', pa.int64()),
    ('library_generation_type', pa.string()),
    ('library_generation_method', pa.string()),
    ('enzyme_delivery_method', pa.string()),
    ('library_delivery_method', pa.string()),
    ('enzyme_integration_state', pa.string()),
    ('library_integration_state', pa.string()),
    ('enzyme_expression_control', pa.string()),
    ('library_expression_control', pa.string()),
    ('library', pa.string()),
    ('readout_dimensionality', pa.string()),
    ('readout_type', pa.string()),
    ('readout_technology', pa.string()),
    ('method_name', pa.string()),
    ('method_uri', pa.string()),
    ('sequencing_library_kit', pa.string()),
    ('sequencing_platform', pa.string()),
    ('sequencing_strategy', pa.string()),
    ('software_counts', pa.string()),
    ('software_analysis', pa.string()),
    ('reference_genome', pa.string()),
    ('passage_number', pa.string()),
    ('associated_datasets', pa.string()),
    ('score_name', pa.string()),
    ('score_value', pa.float64())
])

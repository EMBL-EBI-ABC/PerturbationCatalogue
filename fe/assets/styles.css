/* Make Dash page_content container fill the available space. Especially important for iframes. */

:has(#_pages_content) {
    display: flex;
    flex: 1;
}

#_pages_content {
    display: flex;
    flex: 1;
}

/* Bootstrap colour settings. */

:root {
    /* Primary colour */
    --custom-color-rgb: 23, 140, 67;
    --custom-color: rgb(var(--custom-color-rgb));
    --bs-link-color-rgb: var(--custom-color-rgb);
    --bs-link-color: var(--custom-color);
    /* Hover colour */
    --bs-link-hover-color-rgb: 63, 180, 107;
    --bs-link-hover-color: rgb(var(--bs-link-hover-color-rgb))
  }

.pagination {
    --bs-pagination-active-bg: var(--custom-color);
    --bs-pagination-active-border-color: var(--custom-color);
}

/* Elastic table styles. */

.elastic-table-filter-clear {
    display: none;  /* By default, hide the Clear button. */
}

/* Show Clear button if a checkbox is checked. */
div:has(> .elastic-table-filter-checklist input:checked) ~ .elastic-table-filter-clear {
    display: block;
}

/* Always show the Clear button for range sliders. */
div.card:has(.elastic-table-filter-range-slider) .elastic-table-filter-clear {
    display: block;
}

/* If a checkbox filter has no available values, hide its card. */
div.card:has(.elastic-table-filter-checklist:empty) {
    display: none;
}

/* If a range slider is disabled (i.e., no range available from the API),
hide its card. The component adds the 'rc-slider-disabled' class automatically. */
div.card:has(.elastic-table-filter-range-slider.rc-slider-disabled) {
    display: none;
}

/* If no data is found, hide pagination controls. */
div:has(> .elastic-table-data .no-data-message) + .elastic-table-pagination-controls {
    display: none;
}
